version: '3.8'

services:
  # Jenkins Master
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    image: jenkins-custom:latest
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    user: root
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "minikube:192.168.49.2"
    ports:
      - "8081:8080"      # Jenkins UI
      - "50000:50000"    # Jenkins Agent
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock  # Para ejecutar Docker dentro de Jenkins
      - ./jenkins_config:/var/jenkins_config        # Configuraciones personalizadas
      - ~/.kube:/root/.kube                         # Para kubectl (acceso a Kubernetes)
      - ~/.minikube:/root/.minikube                 # Para Minikube context
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2048m -Xms1024m
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=admin123
    networks:
      - devops-network

  # SonarQube (Análisis de Código)
  sonarqube:
    image: sonarqube:10.3.0-community
    container_name: sonarqube
    restart: unless-stopped
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar123
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - postgres
    networks:
      - devops-network

  # PostgreSQL (Base de datos para SonarQube)
  postgres:
    image: postgres:15-alpine
    container_name: postgres-sonar
    restart: unless-stopped
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar123
      - POSTGRES_DB=sonar
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - devops-network

  # Nexus Repository (Opcional - para artifacts)
  # nexus:
  #   image: sonatype/nexus3:latest
  #   container_name: nexus
  #   restart: unless-stopped
  #   ports:
  #     - "8082:8081"
  #   volumes:
  #     - nexus_data:/nexus-data
  #   networks:
  #     - devops-network

volumes:
  jenkins_home:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local
  postgresql_data:
    driver: local
  # nexus_data:
  #   driver: local

networks:
  devops-network:
    driver: bridge
